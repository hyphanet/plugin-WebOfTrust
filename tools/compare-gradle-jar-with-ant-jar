#!/bin/bash
set -o nounset
set -o errexit
set -o errtrace
trap 'echo "Error at line $LINENO, exit code $?" >&2' ERR

from_ant="$(mktemp --directory --suffix=.from-ant)"
from_gradle="$(mktemp --directory --suffix=.from-gradle)"
trap 'rm -rf "$from_ant" "$from_gradle"' EXIT

# FIXME: Also validate the unit test JAR
jar='dist/WebOfTrust.jar'

echo "Building with Ant..."
gradle clean &> /dev/null
! [ -e "$jar" ]
ant -Dtest.skip=true clean dist &> /dev/null
unzip -qq "$jar" -d "$from_ant"

echo "Building with Gradle..."
ant clean &> /dev/null
! [ -e "$jar" ]
gradle clean jar &> /dev/null
unzip -qq "$jar" -d "$from_gradle"

echo "Deleting files which only Ant bundles: package-info.class, Version.java (not .class)..."
shopt -s globstar
shopt -s nullglob
# These are non-executable classes which only exist as a place to hold JavaDoc, Gradle correctly
# excludes them, so ignore them.
rm --force -- "$from_ant"/**/package-info.class
# ... But in one case Gradle *will* package such a file:
# Gradle uses Ant to compile the XChart submodule, and then adds the contents of the xchart.jar to
# its output WebOfTrust.jar
# Because Ant puts a package-info.class into xchart.jar it will also be contained in WebOfTrust.jar
rm --force -- "$from_gradle"/java/org/knowm/xchart/internal/package-info.class
# Ant for some reason not only includes Version.class but also .java, it shouldn't, so ignore it.
rm --force -- "$from_ant"/**/Version.java

echo "Removing Ant-only stuff from MANIFEST.MF..."
sed --regexp-extended --expression='/^Ant(.*)$/d' \
	--expression='/^Created-By(.*)/d' \
	--in-place "$from_ant/META-INF/MANIFEST.MF"

# To test whether the diff fails if it should:
#echo a >> "$from_gradle/plugins/WebOfTrust/WebOfTrust.class"

echo "Diffing..."
if diff --recursive "$from_ant" "$from_gradle" ; then
	echo "JARs are identical!"
	exit 0
else
	echo "JARs do not match!" >&2
	exit 1
fi
